swagger: "2.0"
info:
  description: "NHL Api for my NHL Vis project"
  version: "1.0.0"
  title: "NHL Api"
  contact:
    email: "lucwsomers@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
basePath: "/api/v1"
tags:
- name: "teams"
  description: "Get information about teams or a team"
- name: "players"
  description: "Get information about players or a player"
- name: "standings"
  description: "Get information about the current standings or specific standings"
- name: "schedule"
  description: "Get information about the current schedule or specific schedule"
- name: "divisions"
  description: "Get information about divisions"
- name: "conferences"
  description: "Get information about conferences"
- name: "games"
  description: "Get information about games or a specific game"
- name: "stats"
  description: "Get information about team or player statistics"

schemes:
- "https"
- "http"
paths:
  /teams:
    get:
      tags:
      - "teams"
      summary: "Returns a list of all teams"
      description: "Multiple status values can be provided in query params"
      operationId: "getTeams"
      produces:
      - "application/json"
      parameters:
      - name: "expand"
        in: "query"
        description: "Return expanded team information"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "team.roster"
          - "person.names"
          - "team.schedule.next"
          - "team.schedule.previous"
          - "team.stats"
      - name: "stats"
        in: "query"
        description: "Specify which stats to get"
        required: false
        type: "string"
      - name: "season"
        in: "query"
        description: "Specify which season to get"
        required: false
        type: "string"
      - name: "teamId"
        in: "query"
        description: "IDs of teams to get"
        required: false
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Team"
  /teams/{teamId}:
    get:
      tags:
      - "teams"
      summary: "Returns a single team"
      description: "Multiple status values can be provided in query params"
      operationId: "getTeam"
      produces:
      - "application/json"
      parameters:
      - name: "teamId"
        in: "path"
        description: "ID of team to return"
        required: true
        type: "integer"
        format: "int64"
      - name: "expand"
        in: "query"
        description: "Return expanded team information"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "team.roster"
          - "person.names"
          - "team.schedule.next"
          - "team.schedule.previous"
          - "team.stats"
      - name: "stats"
        in: "query"
        description: "Specify which stats to get"
        required: false
        type: "string"
      - name: "season"
        in: "query"
        description: "Specify which season to get"
        required: false
        type: "string"
      - name: "teamId"
        in: "query"
        description: "IDs of teams to get"
        required: false
        type: "array"
        items:
          type: "string"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: "#/definitions/Team"
  /divisions:
    get:
      tags:
      - "divisions"
      summary: "Returns informations for all divisions"
      description: "Multiple status values can be provided in query params"
      operationId: "getDivisions"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: "#/definitions/Division"
  /divisions/{divisionId}:
    get:
      tags:
      - "divisions"
      summary: "Returns a single division"
      description: "Multiple status values can be provided in query params"
      operationId: "getDivision"
      produces:
      - "application/json"
      parameters:
      - name: "divisionId"
        in: "path"
        description: "ID of division to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful"
          schema:
            $ref: "#/definitions/Division"
  /conferences:
    get:
      tags:
      - "conferences"
      summary: "Returns informations for all conferences"
      description: "Multiple status values can be provided in query params"
      operationId: "getConferences"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
          schema:
            type: array
            items:
              $ref: "#/definitions/Conference"
  /conferences/{conferenceId}:
    get:
      tags:
      - "conferences"
      summary: "Returns a single conference"
      description: "Multiple status values can be provided in query params"
      operationId: "getConference"
      produces:
      - "application/json"
      parameters:
      - name: "conferenceId"
        in: "path"
        description: "ID of conference to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Successful"
          schema:
              $ref: "#/definitions/Conference"
  /schedule:
    get:
      tags:
      - "schedule"
      summary: "Returns the schedule with provided params"
      description: "Multiple status values can be provided in query params"
      operationId: "getSchedule"
      produces:
      - "application/json"
      parameters:
      - name: "expand"
        in: "query"
        description: "Return expanded schedule information"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "schedule.broadcasts"
          - "schedule.linescore"
          - "schedule.ticket"
      - name: "startDate"
        in: "query"
        description: "Specify which start date to get schedule"
        type: "string"
      - name: "endDate"
        in: "query"
        description: "Specify which end date to get schedule"
        type: "string"
      - name: "date"
        in: "query"
        description: "Specify which date to get schedule"        
        required: false
        type: "string"
      - name: "teamId"
        in: "query"
        description: "ID of team to get"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Schedule"
definitions:
  Team:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      link:
        type: "string"
      venue:
        type: "object"
        items:
          $ref: "#/definitions/Venue"
      abbreviation:
        type: "string"
      teamName:
        type: "string"
      locationName:
        type: "string"
      firstYearOfPlay:
        type: "string"
      division:
        type: "object"
        items:
          $ref: "#/definitions/GenericTeamObject"
      conference:
        type: "object"
        items:
          $ref: "#/definitions/GenericTeamObject"
      franchise:
        type: "object"
        items:
          $ref: "#/definitions/GenericTeamObject"
      shortName:
        type: "string"
      officialSiteUrl:
        type: "string"
      franchiseId:
        type: "integer"
      active:
        type: "boolean"
  Venue:
    type: "object"
    properties:
      name:
        type: "string"
      link:
        type: "string"
      city:
        type: "string"
      timeZone:
        type: "object"
        items:
          $ref: "#/definitions/TimeZone"
  TimeZone:
    type: "object"
    properties:
      id:
        type: "integer"
      offset:
        type: "integer"
      tz:
        type: "string"
  GenericTeamObject:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      link:
        type: "string"
  Division:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      link:
        type: "string"
      abbreviation:
        type: "string"
      conference:
        type: "object"
        items:
          $ref: "#/definitions/GenericTeamObject"
      active:
        type: "boolean"
  Conference:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      link:
        type: "string"
      abbreviation:
        type: "string"
      shortname:
        type: "string"
      active:
        type: "boolean"
  Schedule:
    type: "object"
    properties:
      copyright:
        type: "string"
      totalItems:
        type: "integer"
      totalEvents:
        type: "integer"
      totalGames:
        type: "integer"
      totalMatches:
        type: "integer"    
      wait:
        type: "integer"
      dates:
        type: "array"
        items:
          $ref: "#/definitions/ScheduleDate"
      events:
        type: "array"
        items:
          type: "string"
      matches:
        type: "array"
        items:
          type: "string"
  ScheduleDate:
    type: "object"
    properties:
      date:
        type: "string"
      totalItems:
        type: "integer"
      totalEvents:
        type: "integer"
      totalGames:
        type: "integer"
      totalMatches:
        type: "integer"
      games:
        type: "array"
        items:
          properties:
            game:
              type: "object"
              items:
                $ref: "#/definitions/ScheduleGame"
      teams:
        type: "object"
        items:
          properties:
            away:
              type: "object"
              items: 
                $ref: "#/definitions/ScheduleTeam"
            home:
              type: "object"
              items: 
                $ref: "#/definitions/ScheduleTeam"
      venue:
        type: "object"
        properties:
          name:
            type: "string"
          link:
            type: "string"
      content:
        type: "object"
        properties:
          link:
            type: "string"    
  ScheduleGame:
    type: "object"
    properties:
      gamePk:
        type: "string"
      link:
        type: "string"
      gameType:
        type: "string"
      season:
        type: "string"
      gameDate:
        type: "string" 
      status:
        type: "object"
        items:
          $ref: "#/definitions/ScheduleGameStatus"
  ScheduleGameStatus:
    type: "object"
    properties:
      abstractGameState:
        type: "string"
      codedGameState:
        type: "string"
      detailedState:
        type: "string"
      statusCode:
        type: "string"
      startTimeTBD:
        type: "string"
  ScheduleTeam:
    type: "object"
    properties:
      leagueRecord:
        type: "object"
        properties:
          wins:
            type: "integer"
          losses:
            type: "integer"
          ot:
            type: "integer"
          type:
            type: "string"
      score:
        type: "integer"
      team:
        type: "object"
        properties:
          id:
            type: "integer"
          name:
            type: "string"
          link:
            type: "string"
